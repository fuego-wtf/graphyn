commit logs:
- arch pages: added overview and app structure
- getting started: created comprehensive guide
- nav update: aligned sidebar with main nav
- guides: added transform guide
- guides: added realtime guide
- guides: added widgets guide
- docs: fixed empty pages
- landing: created main landing page
- api: added graphyn service api docs
- docs: improved navigation structure
- log development rules

learnings: created comprehensive guides for core features; improved api documentation coverage; ensured consistent navigation; created comprehensive landing page; added detailed api documentation; ensured consistent branding and messaging; added developmentRules variable to capture all development rules in one place

[02/02/2024]
- created private node repository under fuego-wtf org
- initialized with gitignore and pushed initial codebase
- learned: always check existing directories before creating new repos 

[2024-03-19] suspense option is not valid in latest tanstack query client options, removed from provider config 

[2024-03-27 20:45] removed untracked hotdocs directory 

[2024-02-03 01:18] fixed punycode deprecation warning by adding webpack alias configuration in next.config.mjs
- added config.resolve.alias to disable punycode module
- this is a common issue in next.js projects when using node 20+ 

[2024-02-03 01:20] clerk auth package shows edge runtime warnings
- warnings about setImmediate, MessageChannel, MessageEvent
- safe to ignore when not using edge runtime 

[2024-02-03 01:23] fixed SSR context issue in playground
- wrapped playground page content with client component
- updated provider to handle SSR properly by removing suspense and limiting retries
- added unoptimized image config for static exports
- root cause: context providers were being used during SSR but marked as client components 

[2024-02-03 01:30] fix: added theme provider to fix context error
- issue: useContext error in playground page due to missing theme provider
- solution: wrapped app with ThemeProvider in provider.tsx
- learning: always ensure theme provider is properly set up when using dark mode components 

[2024-03-19 14:00] fix: removed runtime prop from ClerkProvider
- removed unnecessary runtime="nodejs" prop from ClerkProvider in app/layout.tsx
- this prop is not supported in latest versions of @clerk/nextjs
- the provider automatically handles the runtime configuration 

[2024-04-27 16:32] fix error rendering: removed use client from error and not-found
[2024-04-27 16:32] learning: error pages should be server components to avoid missing client context 

[2024-04-27 16:45] fix: add use client directive
[2024-04-27 16:45] learning: error and not-found need to be client components for interactive error handling 

[2024-04-27 16:50] fix: split error component
[2024-04-27 16:50] learning: wrap interactive error ui in a client component to avoid useContext creep during prerender 

[2024-04-27 16:55] fix: dynamic GET and middleware ip fix
[2024-04-27 16:55] learning: dynamic route handlers now require promise-wrapped params, and request.ip should be replaced with headers.get('x-forwarded-for') 

[2024-04-27 17:00] fix: corrected syntax error in error.tsx
[2024-04-27 17:00] fix: updated middleware to ensure correct typing for req 

[2024-04-27 17:10] fix: added use client directive to error page
[2024-04-27 17:10] learning: error page must be a client component to support interactive hooks 

[2024-04-27 17:15] fix: dynamic api & client directive
[2024-04-27 17:15] learning: api routes require promiseâ€‘wrapped params; client pages need "use client" for hooks 

static route remains for sign-in, catch-all removed or renamed 

/* commit: cursorrules created */
/* log: created .cursorrules file with nextjs app router guidelines and project structure instructions. learnings: specific best practices captured for server and client component handling, file structure details, and adherence to nextjs conventions. */ 

/* commit: restore scroll area */

// log details:
// restored scroll area reset to use radix ui primitives
// learned: ensure correct component usage when simplifying components 

restore tooltip functionality
learning: reintroduced radix ui primitives 

fix rate limit headers

learned: using NextResponse.next ensures updated rate limit headers propagate through middleware pipeline. 

// commit: fix middleware headers
// learning: replaced immutable request.headers modification with mutable response.headers by using NextResponse.next(). fix params type
learning: removed promise from params type and simplified destructuring in api routes
postcss config fix
learning: created valid postcss config with plugins key

commit logs:
- update cursorrules steps

learnings: added implementation steps to .cursorrules file

commit logs:
- log comprehensive guide

learnings: added comprehensiveGuide variable to .cursorrules file to capture full development philosophies, standards, and crucial service details

[2024-05-01] commit: update cursorrules file
learning: updated markdown formatting and appended additional info

// commit: fix route types
// build log: verified folder structure, tsconfig, next.config.mjs and env are valid. next build failed due to route.ts GET/PUT/DELETE types; fixed by removing explicit type annotations and casting params. learning: next route handlers require implicit any with casts.
